# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# test.py
# Created on: 2022-07-27 15:03:14.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: test <v_Output_GDB> <Date> <SampleSection> <RouteDominance> <OwnerMaint> <HPMSBins> <TravelSurfaceType> <NHS> <ATIS_Routes> 
# Description: 
# ---------------------------------------------------------------------------

# Import arcpy module
import arcpy

# Script arguments
v_Output_GDB = arcpy.GetParameterAsText(0)
if v_Output_GDB == '#' or not v_Output_GDB:
    v_Output_GDB = "I:\\TaskAssignments\\Pavement_2022\\Routing\\Routing_GapFill\\2022Pavement_HPMSMasterGapFill_PriorToRouting\\Overlay20220511.gdb" # provide a default value if unspecified

Date = arcpy.GetParameterAsText(1)
if Date == '#' or not Date:
    Date = "20220511" # provide a default value if unspecified

SampleSection = arcpy.GetParameterAsText(2)
if SampleSection == '#' or not SampleSection:
    SampleSection = "SampleSection" # provide a default value if unspecified

RouteDominance = arcpy.GetParameterAsText(3)
if RouteDominance == '#' or not RouteDominance:
    RouteDominance = "RouteDominance" # provide a default value if unspecified

OwnerMaint = arcpy.GetParameterAsText(4)
if OwnerMaint == '#' or not OwnerMaint:
    OwnerMaint = "OwnerMaint" # provide a default value if unspecified

HPMSBins = arcpy.GetParameterAsText(5)
if HPMSBins == '#' or not HPMSBins:
    HPMSBins = "HPMSBins" # provide a default value if unspecified

TravelSurfaceType = arcpy.GetParameterAsText(6)
if TravelSurfaceType == '#' or not TravelSurfaceType:
    TravelSurfaceType = "TravelSurfaceType" # provide a default value if unspecified

NHS = arcpy.GetParameterAsText(7)
if NHS == '#' or not NHS:
    NHS = "NHS" # provide a default value if unspecified

ATIS_Routes = arcpy.GetParameterAsText(8)
if ATIS_Routes == '#' or not ATIS_Routes:
    ATIS_Routes = "ATIS_Routes" # provide a default value if unspecified

# Local variables:
Output_Table = ""
Overlay__Date_ = "%GDB%/Overlay_%Date%"
NHS_Own_Samp_Bin_Overlay__Date_ = "NHS_Own_Samp_Bin_Overlay_%Date%"
NHS_Own_Samp_Bin_Overlay__Date___4_ = NHS_Own_Samp_Bin_Overlay__Date_
NHS_Own_Samp_Bin_Overlay__Date___2_ = NHS_Own_Samp_Bin_Overlay__Date___4_
NHS_Own_Samp_Bin_Overlay__Date__GAPS = "NHS_Own_Samp_Bin_Overlay_%Date%_GAPS"
Gaps__Date_ = "I:\\TaskAssignments\\Pavement_2022\\Routing\\Routing_GapFill\\2022Pavement_HPMSMasterGapFill_PriorToRouting\\Overlay20220511.gdb\\Gaps_20220511"
Gaps__Date__Dissolve = "%GDB%\\Gaps_%Date%_Dissolve"
Gaps_Unsplit__Date_ = Gaps__Date__Dissolve
NHS_Own_Samp_Bin_Overlay__Date__GAPS__3_ = "NHS_Own_Samp_Bin_Overlay_%Date%_GAPS"
NHS_Own_Samp_Bin_Overlay__Date__GAPS__2_ = NHS_Own_Samp_Bin_Overlay__Date__GAPS__3_
NHS_Own_Samp_Bin_Overlay__Date__GAPS__4_ = NHS_Own_Samp_Bin_Overlay__Date__GAPS__2_
NHS_Own_Samp_Bin_Overlay_20220413_GAP1S = NHS_Own_Samp_Bin_Overlay__Date__GAPS__4_
Gaps_Unsplit_NoRampsNoFrontage__Date_ = "I:\\TaskAssignments\\Pavement_2022\\Routing\\Routing_GapFill\\2022Pavement_HPMSMasterGapFill_PriorToRouting\\Overlay20220511.gdb\\Gaps_Unsplit_NoRampsNoFrontage_%Date%"

# Process: Overlay Route Events
arcpy.OverlayRouteEvents_locref(ATIS_Routes, "", "NHS;TravelSurfaceType;SampleSection;RouteDominance;OwnerMaint;HPMSBins", "INCLUDE_GEOMETRY", Output_Table, Overlay__Date_)

# Process: Make Feature Layer
arcpy.MakeFeatureLayer_management(Overlay__Date_, NHS_Own_Samp_Bin_Overlay__Date_, "", "", "")

# Process: Selection of Gaps
arcpy.SelectLayerByAttribute_management(NHS_Own_Samp_Bin_Overlay__Date_, "NEW_SELECTION", "((Ownership='DOT' OR NHS IS NOT NULL OR SampleSectionID IS NOT NULL ) AND  HPMS_BinID IS NULL) AND route_id NOT LIKE '00%0%' AND route_id NOT LIKE '%UNBUILT%'")

# Process: Further Selection of Gaps
arcpy.SelectLayerByAttribute_management(NHS_Own_Samp_Bin_Overlay__Date___4_, "REMOVE_FROM_SELECTION", "SurfaceType=28 OR SurfaceType=16")

# Process: Make New Layer
arcpy.MakeFeatureLayer_management(NHS_Own_Samp_Bin_Overlay__Date___2_, NHS_Own_Samp_Bin_Overlay__Date__GAPS, "", "", "")

# Process: Feature Class to Feature Class
arcpy.FeatureClassToFeatureClass_conversion(NHS_Own_Samp_Bin_Overlay__Date__GAPS, v_Output_GDB, "Gaps_%Date%", "", "", "")

# Process: Dissolve
arcpy.Dissolve_management(Gaps__Date_, Gaps__Date__Dissolve, "", "", "MULTI_PART", "DISSOLVE_LINES")

# Process: Feature Class to Feature Class (2)
arcpy.FeatureClassToFeatureClass_conversion(Gaps__Date__Dissolve, v_Output_GDB, "Gaps_Unsplit_%Date%", "", "", "")

# Process: Make Feature Layer (3)
arcpy.MakeFeatureLayer_management(Gaps_Unsplit__Date_, NHS_Own_Samp_Bin_Overlay__Date__GAPS__3_, "", "", "OBJECTID OBJECTID VISIBLE NONE;Shape Shape VISIBLE NONE;Shape_Length Shape_Length VISIBLE NONE")

# Process: No Ramps/Frontages/Unpaved
arcpy.SelectLayerByAttribute_management(NHS_Own_Samp_Bin_Overlay__Date__GAPS__3_, "NEW_SELECTION", "(RouteSubtype<=75 AND RouteSubtype>=72) OR route_id LIKE '%RAMP%' OR route_id LIKE '%FRONTAGE%' OR SurfaceType = 10")

# Process: No Ramps or Frontage Yrs
arcpy.SelectLayerByAttribute_management(NHS_Own_Samp_Bin_Overlay__Date__GAPS__2_, "SWITCH_SELECTION", "")

# Process: Select Layer By Attribute (4)
arcpy.SelectLayerByAttribute_management(NHS_Own_Samp_Bin_Overlay__Date__GAPS__4_, "NEW_SELECTION", "(Primary_NonCardDominanceSystem =1 OR Secondary_NonCardDominanceSys =1) OR ( Primary_NonCardDominanceSystem IS NULL OR Secondary_NonCardDominanceSys IS NULL)")

# Process: Feature Class to Feature Class (3)
arcpy.FeatureClassToFeatureClass_conversion(NHS_Own_Samp_Bin_Overlay_20220413_GAP1S, v_Output_GDB, "Gaps_Unsplit_NoRampsNoFrontage_%Date%", "", "Shape_Length \"Shape_Length\" false true true 8 Double 0 0 ,First,#,NHS_Own_Samp_Bin_Overlay_%Date%_GAPS,Shape_Length,-1,-1", "")

